---
apiVersion: v1
kind: ConfigMap
metadata:
  name: properties
  namespace: scienz
data:
  metastore-site.xml.template: |
    <configuration>
        <property>
            <name>metastore.thrift.uris</name>
            <value>thrift://0.0.0.0:9083</value>
            <description>
                Thrift URI for the remote metastore. Used by metastore client
                to connect to remote metastore.
            </description>
        </property>
        <property>
            <name>metastore.thrift.port</name>
            <value>9083</value>
        </property>
        <property>
            <name>metastore.task.threads.always</name>
            <value>org.apache.hadoop.hive.metastore.events.EventCleanerTask</value>
        </property>
        <property>
            <name>metastore.expression.proxy</name>
            <value>org.apache.hadoop.hive.metastore.DefaultPartitionExpressionProxy</value>
        </property>
        <property>
            <name>javax.jdo.option.ConnectionDriverName</name>
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property>
            <name>javax.jdo.option.ConnectionURL</name>
            <value>jdbc:mysql://$MYSQL_HOST:$MYSQL_PORT/$METASTORE_DB</value>
        </property>
        <property>
            <name>javax.jdo.option.ConnectionUserName</name>
            <value>$MYSQL_USER</value>
        </property>
        <property>
            <name>javax.jdo.option.ConnectionPassword</name>
            <value>$MYSQL_PASSWORD</value>
        </property>
    <name>hive.security.authorization.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>hive.security.authorization.manager</name>
        <value>org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory</value>
    </property>
    <property>
        <name>hive.security.authenticator.manager</name>
        <value>org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator</value>
    </property>
    <property>
        <name>hive.conf.restricted.list</name>
        <value>hive.security.authorization.enabled,hive.security.authorization.manager,hive.security.authenticator.manager</value>
    </property>

    </configuration>
  alluxio-site.properties: |
    alluxio.master.mount.table.root.ufs=s3a://minio-test-bucket/
    alluxio.underfs.s3.endpoint=minio:9000
    alluxio.underfs.s3.disable.dns.buckets=true
    alluxio.underfs.s3.inherit.acl=false
    alluxio.tmp.dirs=/tmp
    aws.accessKeyId=5GfOoRgz3NDAEFxo7lwa
    aws.secretKey=gxhtXmhOTa5hfcYwXiQSKPqEAf6JSbdBuDepMFCG
    alluxio.user.file.writetype.default=THROUGH
    alluxio.proxy.s3.writetype=THROUGH
    alluxio.proxy.s3.deletetype=ALLUXIO_AND_UFS
    alluxio.master.hostname=$ALLUXIO_MASTER_HOSTNAME
    alluxio.master.journal.type=UFS
    alluxio.worker.memory.size=1000MB
    alluxio.underfs.s3.streaming.upload.enabled=false
    alluxio.user.file.metadata.load.type=ONCE
    alluxio.user.file.passive.cache.enabled=true
    alluxio.user.file.persistence.initial.wait.time=-1
    alluxio.user.short.circuit.enabled=true
  log4j.properties: |
    log4j.rootLogger=DEBUG, ${alluxio.logger.type}, ${alluxio.remote.logger.type}
    log4j.rootLogger=INFO, ${alluxio.logger.type}, ${alluxio.remote.logger.type}
    log4j.category.alluxio.logserver=INFO, ${alluxio.logserver.logger.type}
    log4j.additivity.alluxio.logserver=false
    log4j.logger.AUDIT_LOG=INFO, ${alluxio.master.audit.logger.type}
    log4j.additivity.AUDIT_LOG=false
    # Configures an appender whose name is "" (empty string) to be NullAppender.
    # By default, if a Java class does not specify a particular appender, log4j will
    # use "" as the appender name, then it will use Null appender.
    log4j.appender.=org.apache.log4j.varia.NullAppender
    log4j.appender.Console=org.apache.log4j.ConsoleAppender
    log4j.appender.Console.Target=System.out
    log4j.appender.Console.layout=org.apache.log4j.PatternLayout
    log4j.appender.Console.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # The ParquetWriter logs for every row group which is not noisy for large row group size,
    # but very noisy for small row group size.
    log4j.logger.org.apache.parquet.hadoop.InternalParquetRecordWriter=WARN
    log4j.logger.org.apache.parquet.hadoop.InternalParquetRecordReader=WARN
    # Appender for Job Master
    log4j.appender.JOB_MASTER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.JOB_MASTER_LOGGER.File=${alluxio.logs.dir}/job_master.log
    log4j.appender.JOB_MASTER_LOGGER.MaxFileSize=10MB
    log4j.appender.JOB_MASTER_LOGGER.MaxBackupIndex=100
    log4j.appender.JOB_MASTER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.JOB_MASTER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M) - %m%n
    # Appender for Job Workers
    log4j.appender.JOB_WORKER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.JOB_WORKER_LOGGER.File=${alluxio.logs.dir}/job_worker.log
    log4j.appender.JOB_WORKER_LOGGER.MaxFileSize=10MB
    log4j.appender.JOB_WORKER_LOGGER.MaxBackupIndex=100
    log4j.appender.JOB_WORKER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.JOB_WORKER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M) - %m%n
    # Appender for Master
    log4j.appender.MASTER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.MASTER_LOGGER.File=${alluxio.logs.dir}/master.log
    log4j.appender.MASTER_LOGGER.MaxFileSize=10MB
    log4j.appender.MASTER_LOGGER.MaxBackupIndex=100
    log4j.appender.MASTER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.MASTER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Appender for Master
    log4j.appender.SECONDARY_MASTER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.SECONDARY_MASTER_LOGGER.File=${alluxio.logs.dir}/secondary_master.log
    log4j.appender.SECONDARY_MASTER_LOGGER.MaxFileSize=10MB
    log4j.appender.SECONDARY_MASTER_LOGGER.MaxBackupIndex=100
    log4j.appender.SECONDARY_MASTER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.SECONDARY_MASTER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Appender for Master audit
    log4j.appender.MASTER_AUDIT_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.MASTER_AUDIT_LOGGER.File=${alluxio.logs.dir}/master_audit.log
    log4j.appender.MASTER_AUDIT_LOGGER.MaxFileSize=10MB
    log4j.appender.MASTER_AUDIT_LOGGER.MaxBackupIndex=100
    log4j.appender.MASTER_AUDIT_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.MASTER_AUDIT_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M) - %m%n
    # Appender for Proxy
    log4j.appender.PROXY_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.PROXY_LOGGER.File=${alluxio.logs.dir}/proxy.log
    log4j.appender.PROXY_LOGGER.MaxFileSize=10MB
    log4j.appender.PROXY_LOGGER.MaxBackupIndex=100
    log4j.appender.PROXY_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.PROXY_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Appender for Workers
    log4j.appender.WORKER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.WORKER_LOGGER.File=${alluxio.logs.dir}/worker.log
    log4j.appender.WORKER_LOGGER.MaxFileSize=10MB
    log4j.appender.WORKER_LOGGER.MaxBackupIndex=100
    log4j.appender.WORKER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.WORKER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Remote appender for Job Master
    log4j.appender.REMOTE_JOB_MASTER_LOGGER=org.apache.log4j.net.SocketAppender
    log4j.appender.REMOTE_JOB_MASTER_LOGGER.Port=${alluxio.logserver.port}
    log4j.appender.REMOTE_JOB_MASTER_LOGGER.RemoteHost=${alluxio.logserver.hostname}
    log4j.appender.REMOTE_JOB_MASTER_LOGGER.ReconnectionDelay=10000
    log4j.appender.REMOTE_JOB_MASTER_LOGGER.filter.ID=alluxio.AlluxioRemoteLogFilter
    log4j.appender.REMOTE_JOB_MASTER_LOGGER.filter.ID.ProcessType=JOB_MASTER
    log4j.appender.REMOTE_JOB_MASTER_LOGGER.Threshold=WARN
    # Remote appender for Job Workers
    log4j.appender.REMOTE_JOB_WORKER_LOGGER=org.apache.log4j.net.SocketAppender
    log4j.appender.REMOTE_JOB_WORKER_LOGGER.Port=${alluxio.logserver.port}
    log4j.appender.REMOTE_JOB_WORKER_LOGGER.RemoteHost=${alluxio.logserver.hostname}
    log4j.appender.REMOTE_JOB_WORKER_LOGGER.ReconnectionDelay=10000
    log4j.appender.REMOTE_JOB_WORKER_LOGGER.filter.ID=alluxio.AlluxioRemoteLogFilter
    log4j.appender.REMOTE_JOB_WORKER_LOGGER.filter.ID.ProcessType=JOB_WORKER
    log4j.appender.REMOTE_JOB_WORKER_LOGGER.Threshold=WARN
    # Remote appender for Master
    log4j.appender.REMOTE_MASTER_LOGGER=org.apache.log4j.net.SocketAppender
    log4j.appender.REMOTE_MASTER_LOGGER.Port=${alluxio.logserver.port}
    log4j.appender.REMOTE_MASTER_LOGGER.RemoteHost=${alluxio.logserver.hostname}
    log4j.appender.REMOTE_MASTER_LOGGER.ReconnectionDelay=10000
    log4j.appender.REMOTE_MASTER_LOGGER.filter.ID=alluxio.AlluxioRemoteLogFilter
    log4j.appender.REMOTE_MASTER_LOGGER.filter.ID.ProcessType=MASTER
    log4j.appender.REMOTE_MASTER_LOGGER.Threshold=WARN
    # Remote appender for Secondary Master
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER=org.apache.log4j.net.SocketAppender
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER.Port=${alluxio.logserver.port}
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER.RemoteHost=${alluxio.logserver.hostname}
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER.ReconnectionDelay=10000
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER.filter.ID=alluxio.AlluxioRemoteLogFilter
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER.filter.ID.ProcessType=SECONDARY_MASTER
    log4j.appender.REMOTE_SECONDARY_MASTER_LOGGER.Threshold=WARN
    # Remote appender for Proxy
    log4j.appender.REMOTE_PROXY_LOGGER=org.apache.log4j.net.SocketAppender
    log4j.appender.REMOTE_PROXY_LOGGER.Port=${alluxio.logserver.port}
    log4j.appender.REMOTE_PROXY_LOGGER.RemoteHost=${alluxio.logserver.hostname}
    log4j.appender.REMOTE_PROXY_LOGGER.ReconnectionDelay=10000
    log4j.appender.REMOTE_PROXY_LOGGER.filter.ID=alluxio.AlluxioRemoteLogFilter
    log4j.appender.REMOTE_PROXY_LOGGER.filter.ID.ProcessType=PROXY
    log4j.appender.REMOTE_PROXY_LOGGER.Threshold=WARN
    # Remote appender for Workers
    log4j.appender.REMOTE_WORKER_LOGGER=org.apache.log4j.net.SocketAppender
    log4j.appender.REMOTE_WORKER_LOGGER.Port=${alluxio.logserver.port}
    log4j.appender.REMOTE_WORKER_LOGGER.RemoteHost=${alluxio.logserver.hostname}
    log4j.appender.REMOTE_WORKER_LOGGER.ReconnectionDelay=10000
    log4j.appender.REMOTE_WORKER_LOGGER.filter.ID=alluxio.AlluxioRemoteLogFilter
    log4j.appender.REMOTE_WORKER_LOGGER.filter.ID.ProcessType=WORKER
    log4j.appender.REMOTE_WORKER_LOGGER.Threshold=WARN
    # (Local) appender for log server itself
    log4j.appender.LOGSERVER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.LOGSERVER_LOGGER.File=${alluxio.logs.dir}/logserver.log
    log4j.appender.LOGSERVER_LOGGER.MaxFileSize=10MB
    log4j.appender.LOGSERVER_LOGGER.MaxBackupIndex=100
    log4j.appender.LOGSERVER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.LOGSERVER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # (Local) appender for log server to log on behalf of log clients
    # No need to configure file path because log server will dynamically
    # figure out for each appender.
    log4j.appender.LOGSERVER_CLIENT_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.LOGSERVER_CLIENT_LOGGER.MaxFileSize=10MB
    log4j.appender.LOGSERVER_CLIENT_LOGGER.MaxBackupIndex=100
    log4j.appender.LOGSERVER_CLIENT_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.LOGSERVER_CLIENT_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Appender for User
    log4j.appender.USER_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.USER_LOGGER.File=${alluxio.user.logs.dir}/user_${user.name}.log
    log4j.appender.USER_LOGGER.MaxFileSize=10MB
    log4j.appender.USER_LOGGER.MaxBackupIndex=10
    log4j.appender.USER_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.USER_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Appender for Fuse
    log4j.appender.FUSE_LOGGER=org.apache.log4j.RollingFileAppender
    log4j.appender.FUSE_LOGGER.File=${alluxio.logs.dir}/fuse.log
    log4j.appender.FUSE_LOGGER.MaxFileSize=10MB
    log4j.appender.FUSE_LOGGER.MaxBackupIndex=10
    log4j.appender.FUSE_LOGGER.layout=org.apache.log4j.PatternLayout
    log4j.appender.FUSE_LOGGER.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n
    # Disable noisy DEBUG logs
    log4j.logger.io.grpc.netty.NettyServerHandler=OFF
    # Disable noisy INFO logs from ratis
    log4j.logger.org.apache.ratis.grpc.server.GrpcLogAppender=ERROR
    log4j.logger.org.apache.ratis.grpc.server.GrpcServerProtocolService=WARN
    log4j.logger.org.apache.ratis.server.impl.FollowerInfo=WARN
    log4j.logger.org.apache.ratis.server.impl.RaftServerImpl=WARN
  hive.properties: |
    connector.name=hive-hadoop2
    hive.metastore.uri=thrift://metastore:9083
    hive.config.resources=/presto-server-344/etc/catalog/core-site.xml
    hive.temporary-staging-directory-enabled=false
    hive.s3.endpoint=s3a://minio:9000/
    hive.allow-add-column=true
    hive.allow-comment-column=true
    hive.allow-comment-table=true
    hive.allow-drop-column=true
    hive.allow-drop-table=true
    hive.allow-rename-column=true
    hive.allow-rename-table=true
  log.properties: |
    io.prestosql=INFO
  node.properties.template: |
    node.environment=production
    node.id=$(uuidgen -N $HOSTNAME --namespace @dns --md5)
    node.data-dir=/var/presto/data
  config.properties.template: |
    coordinator=$(bash -c "if [ $HOSTNAME == 'presto-coordinator-0' ]; then echo 'true'; else echo 'false'; fi")
    node-scheduler.include-coordinator=false
    http-server.http.port=8080
    query.max-memory=40GB
    query.max-memory-per-node=4000MB
    query.max-total-memory-per-node=4000MB
    task.writer-count=2
    access-control.config-files=etc/access-control-ranger.properties
    discovery.uri=http://presto-coordinator-headless:8080
    $(bash -c "if [ $HOSTNAME == 'presto-coordinator-0' ]; then echo '
    discovery-server.enabled=true
    '; else echo ''; fi")
    access-control.config-files=etc/access-control-ranger.properties
  access-control-ranger.properties: |
    access-control.name=ranger
    #ranger.policy-rest-url=http://ranger-admin-svc:6080
    #ranger.service-name=presto-production
    #ranger.presto-plugin-username=admin
    #ranger.presto-plugin-password=G0powerRangers
    #ranger.policy-refresh-interval=30s
  core-site.xml: |
    <configuration>
      <property>
        <name>fs.alluxio.impl</name>
        <value>alluxio.hadoop.FileSystem</value>
      </property>
      <property>
        <name>fs.s3.awsAccessKeyId</name>
        <value>minio</value>
      </property>
      <property>
        <name>fs.s3.awsSecretAccessKey</name>
        <value>minio123</value>
      </property>
    </configuration>
  jvm.config: |
    -server
    -Xmx6G
    -XX:-UseBiasedLocking
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+ExitOnOutOfMemoryError
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    -Xbootclasspath/a:/presto-server-344/etc/alluxio-site.properties
  storage-schemas.conf: |
    [carbon]
    pattern = ^carbon\.
    retentions = 1s:1d,1min:90d
    [default]
    pattern = .*
    retentions = 1s:14d,1min:30d
  carbon.conf: |
    [cache]
    ENABLE_LOGROTATION = True
    USER =
    MAX_CACHE_SIZE = inf
    MAX_UPDATES_PER_SECOND = 50
    MAX_CREATES_PER_MINUTE = 500
    LINE_RECEIVER_INTERFACE = 0.0.0.0
    LINE_RECEIVER_PORT = 2003
    ENABLE_UDP_LISTENER = False
    UDP_RECEIVER_INTERFACE = 0.0.0.0
    UDP_RECEIVER_PORT = 2003
    PICKLE_RECEIVER_INTERFACE = 0.0.0.0
    PICKLE_RECEIVER_PORT = 2004
    LOG_LISTENER_CONNECTIONS = True
    USE_INSECURE_UNPICKLER = False
    CACHE_QUERY_INTERFACE = 0.0.0.0
    CACHE_QUERY_PORT = 7002
    USE_FLOW_CONTROL = True
    LOG_UPDATES = False
    LOG_CACHE_HITS = False
    LOG_CACHE_QUEUE_SORTS = True
    CACHE_WRITE_STRATEGY = sorted
    WHISPER_AUTOFLUSH = False
    WHISPER_FALLOCATE_CREATE = True

    [relay]
    LINE_RECEIVER_INTERFACE = 0.0.0.0
    LINE_RECEIVER_PORT = 2013
    PICKLE_RECEIVER_INTERFACE = 0.0.0.0
    PICKLE_RECEIVER_PORT = 2014
    LOG_LISTENER_CONNECTIONS = True
    RELAY_METHOD = rules
    REPLICATION_FACTOR = 1
    DESTINATIONS = 127.0.0.1:2004
    MAX_DATAPOINTS_PER_MESSAGE = 500
    MAX_QUEUE_SIZE = 10000
    USE_FLOW_CONTROL = True

    [aggregator]
    LINE_RECEIVER_INTERFACE = 0.0.0.0
    LINE_RECEIVER_PORT = 2023
    PICKLE_RECEIVER_INTERFACE = 0.0.0.0
    PICKLE_RECEIVER_PORT = 2024
    LOG_LISTENER_CONNECTIONS = True
    FORWARD_ALL = True
    DESTINATIONS = 127.0.0.1:2004
    REPLICATION_FACTOR = 1
    MAX_QUEUE_SIZE = 10000
    USE_FLOW_CONTROL = True
    MAX_DATAPOINTS_PER_MESSAGE = 500
    MAX_AGGREGATION_INTERVALS = 5
  graphite.yaml: |
    {
      "apiVersion": 1,
      "datasources": [
        {
          "name": "Benchto graphite",
          "type": "graphite",
          "url": "http://benchto-graphite:80",
          "access": "proxy",
          "isDefault": true,
          "basicAuth": true,
          "basicAuthUser": "guest",
          "basicAuthPassword": "guest"
        }
      ]
    }
  application-presto-devenv.yaml: |
    benchmark-service:
      url: http://benchto-service:8080

    data-sources:
      presto:
        url: jdbc:presto://presto-coordinator-headless:8080?user=test
        driver-class-name: io.prestosql.jdbc.PrestoDriver

    environment:
      name: PRESTO-DEVENV

    presto:
      url: http://presto-coordinator-headless:8080

    benchmark:
      feature:
        presto:
          metrics.collection.enabled: true

    macros:
      sleep-4s:
        command: echo "Sleeping for 4s" && sleep 4
  ranger-admin-install.properties.template: |
    #------------------------- DB CONFIG - BEGIN ----------------------------------
    # Uncomment the below if the DBA steps need to be run separately
    #setup_mode=SeparateDBA

    PYTHON_COMMAND_INVOKER=python3

    #DB_FLAVOR=MYSQL|ORACLE|POSTGRES|MSSQL|SQLA
    DB_FLAVOR=MYSQL
    #

    #
    # Location of DB client library (please check the location of the jar file)
    #
    #SQL_CONNECTOR_JAR=/usr/share/java/ojdbc6.jar
    #SQL_CONNECTOR_JAR=/usr/share/java/mysql-connector-java.jar
    #SQL_CONNECTOR_JAR=/usr/share/java/postgresql.jar
    #SQL_CONNECTOR_JAR=/usr/share/java/sqljdbc4.jar
    #SQL_CONNECTOR_JAR=/opt/sqlanywhere17/java/sajdbc4.jar
    SQL_CONNECTOR_JAR=/mysql-connector-java-8.0.19/mysql-connector-java-8.0.19.jar


    #
    # DB password for the DB admin user-id
    # **************************************************************************
    # ** If the password is left empty or not-defined here,
    # ** it will try with blank password during installation process
    # **************************************************************************
    #
    db_root_user=$MYSQL_USER
    db_root_password=$MYSQL_PASSWORD
    db_host=$MYSQL_HOST:$MYSQL_PORT
    #SSL config
    db_ssl_enabled=false
    db_ssl_required=false
    db_ssl_verifyServerCertificate=false
    #db_ssl_auth_type=1-way|2-way, where 1-way represents standard one way ssl authentication and 2-way represents mutual ssl authentication
    db_ssl_auth_type=2-way
    javax_net_ssl_keyStore=
    javax_net_ssl_keyStorePassword=
    javax_net_ssl_trustStore=
    javax_net_ssl_trustStorePassword=
    #
    # DB UserId used for the Ranger schema
    #
    db_name=$RANGER_DB
    #TODO: create a proper DB user. Also, secrets.
    db_user=$MYSQL_USER
    db_password=$MYSQL_PASSWORD

    # change password. Password for below mentioned users can be changed only once using this property.
    #PLEASE NOTE :: Password should be minimum 8 characters with min one alphabet and one numeric.
    rangerAdmin_password=$RANGER_PASSWORD
    rangerTagsync_password=$RANGER_PASSWORD
    rangerUsersync_password=$RANGER_PASSWORD
    keyadmin_password=$RANGER_PASSWORD


    #Source for Audit Store. Currently solr and elasticsearch are supported.
    # * audit_store is solr
    audit_store=

    # * audit_solr_url Elasticsearch Host(s). E.g. 127.0.0.1
    audit_elasticsearch_urls=
    audit_elasticsearch_port=
    audit_elasticsearch_protocol=
    audit_elasticsearch_user=
    audit_elasticsearch_password=
    audit_elasticsearch_index=
    audit_elasticsearch_bootstrap_enabled=true


    # * audit_solr_url URL to Solr. E.g. http://<solr_host>:6083/solr/ranger_audits
    audit_solr_urls=
    audit_solr_user=
    audit_solr_password=
    audit_solr_zookeepers=

    audit_solr_collection_name=ranger_audits
    #solr Properties for cloud mode
    audit_solr_config_name=ranger_audits
    audit_solr_no_shards=1
    audit_solr_no_replica=1
    audit_solr_max_shards_per_node=1
    audit_solr_acl_user_list_sasl=solr,infra-solr
    audit_solr_bootstrap_enabled=true

    #------------------------- DB CONFIG - END ----------------------------------

    #
    # ------- PolicyManager CONFIG ----------------
    #

    policymgr_external_url=http://localhost:6080
    policymgr_http_enabled=true
    policymgr_https_keystore_file=
    policymgr_https_keystore_keyalias=rangeradmin
    policymgr_https_keystore_password=

    #Add Supported Components list below separated by semi-colon, default value is empty string to support all components
    #Example :  policymgr_supportedcomponents=hive,hbase,hdfs
    policymgr_supportedcomponents=

    #
    # ------- PolicyManager CONFIG - END ---------------
    #


    #
    # ------- UNIX User CONFIG ----------------
    #
    unix_user=ranger
    unix_user_pwd=ranger
    unix_group=ranger

    #
    # ------- UNIX User CONFIG  - END ----------------
    #
    #

    #
    # UNIX authentication service for Policy Manager
    #
    # PolicyManager can authenticate using UNIX username/password
    # The UNIX server specified here as authServiceHostName needs to be installed with ranger-unix-ugsync package.
    # Once the service is installed on authServiceHostName, the UNIX username/password from the host <authServiceHostName> can be used to login into policy manager
    #
    # ** The installation of ranger-unix-ugsync package can be installed after the policymanager installation is finished.
    #
    #LDAP|ACTIVE_DIRECTORY|UNIX|NONE
    authentication_method=NONE
    remoteLoginEnabled=true
    authServiceHostName=localhost
    authServicePort=5151
    ranger_unixauth_keystore=keystore.jks
    ranger_unixauth_keystore_password=password
    ranger_unixauth_truststore=cacerts
    ranger_unixauth_truststore_password=changeit

    ####LDAP settings - Required only if have selected LDAP authentication ####
    #
    # Sample Settings
    #
    #xa_ldap_url=ldap://127.0.0.1:389
    #xa_ldap_userDNpattern=uid={0},ou=users,dc=xasecure,dc=net
    #xa_ldap_groupSearchBase=ou=groups,dc=xasecure,dc=net
    #xa_ldap_groupSearchFilter=(member=uid={0},ou=users,dc=xasecure,dc=net)
    #xa_ldap_groupRoleAttribute=cn
    #xa_ldap_base_dn=dc=xasecure,dc=net
    #xa_ldap_bind_dn=cn=admin,ou=users,dc=xasecure,dc=net
    #xa_ldap_bind_password=
    #xa_ldap_referral=follow|ignore
    #xa_ldap_userSearchFilter=(uid={0})

    xa_ldap_url=
    xa_ldap_userDNpattern=
    xa_ldap_groupSearchBase=
    xa_ldap_groupSearchFilter=
    xa_ldap_groupRoleAttribute=
    xa_ldap_base_dn=
    xa_ldap_bind_dn=
    xa_ldap_bind_password=
    xa_ldap_referral=
    xa_ldap_userSearchFilter=
    ####ACTIVE_DIRECTORY settings - Required only if have selected AD authentication ####
    #
    # Sample Settings
    #
    #xa_ldap_ad_domain=xasecure.net
    #xa_ldap_ad_url=ldap://127.0.0.1:389
    #xa_ldap_ad_base_dn=dc=xasecure,dc=net
    #xa_ldap_ad_bind_dn=cn=administrator,ou=users,dc=xasecure,dc=net
    #xa_ldap_ad_bind_password=
    #xa_ldap_ad_referral=follow|ignore
    #xa_ldap_ad_userSearchFilter=(sAMAccountName={0})

    xa_ldap_ad_domain=
    xa_ldap_ad_url=
    xa_ldap_ad_base_dn=
    xa_ldap_ad_bind_dn=
    xa_ldap_ad_bind_password=
    xa_ldap_ad_referral=
    xa_ldap_ad_userSearchFilter=

    #------------ Kerberos Config -----------------
    spnego_principal=
    spnego_keytab=
    token_valid=30
    cookie_domain=
    cookie_path=/
    admin_principal=
    admin_keytab=
    lookup_principal=
    lookup_keytab=
    hadoop_conf=/etc/hadoop/conf
    #
    #-------- SSO CONFIG - Start ------------------
    #
    sso_enabled=false
    sso_providerurl=https://127.0.0.1:8443/gateway/knoxsso/api/v1/websso
    sso_publickey=

    #
    #-------- SSO CONFIG - END ------------------

    # Custom log directory path
    RANGER_ADMIN_LOG_DIR=$PWD

    # PID file path
    RANGER_PID_DIR_PATH=/var/run/ranger

    # #################  DO NOT MODIFY ANY VARIABLES BELOW #########################
    #
    # --- These deployment variables are not to be modified unless you understand the full impact of the changes
    #
    ################################################################################
    XAPOLICYMGR_DIR=$PWD
    app_home=$PWD/ews/webapp
    TMPFILE=$PWD/.fi_tmp
    LOGFILE=$PWD/logfile
    LOGFILES="$LOGFILE"

    JAVA_BIN='java'
    JAVA_VERSION_REQUIRED='1.8'
    JAVA_ORACLE='Java(TM) SE Runtime Environment'

    ranger_admin_max_heap_size=1g
    #retry DB and Java patches after the given time in seconds.
    PATCH_RETRY_INTERVAL=120
    STALE_PATCH_ENTRY_HOLD_TIME=10

    #mysql_create_user_file=${PWD}/db/mysql/create_dev_user.sql
    mysql_core_file=db/mysql/optimized/current/ranger_core_db_mysql.sql
    mysql_audit_file=db/mysql/xa_audit_db.sql
    #mysql_asset_file=${PWD}/db/mysql/reset_asset.sql

    #oracle_create_user_file=${PWD}/db/oracle/create_dev_user_oracle.sql
    oracle_core_file=db/oracle/optimized/current/ranger_core_db_oracle.sql
    oracle_audit_file=db/oracle/xa_audit_db_oracle.sql
    #oracle_asset_file=${PWD}/db/oracle/reset_asset_oracle.sql
    #
    postgres_core_file=db/postgres/optimized/current/ranger_core_db_postgres.sql
    postgres_audit_file=db/postgres/xa_audit_db_postgres.sql
    #
    sqlserver_core_file=db/sqlserver/optimized/current/ranger_core_db_sqlserver.sql
    sqlserver_audit_file=db/sqlserver/xa_audit_db_sqlserver.sql
    #
    sqlanywhere_core_file=db/sqlanywhere/optimized/current/ranger_core_db_sqlanywhere.sql
    sqlanywhere_audit_file=db/sqlanywhere/xa_audit_db_sqlanywhere.sql
    cred_keystore_filename=$app_home/WEB-INF/classes/conf/.jceks/rangeradmin.jceks
  app.ini : |
    APP_NAME = Gitea
    RUN_USER = git
    RUN_MODE = prod

    [repository]
    FORCE_PRIVATE = false
    DISABLE_HTTP_GIT = false

    [repository.upload]
    ENABLED = true
    ALLOWED_TYPES =
    FILE_MAX_SIZE = 3
    MAX_FILES = 5

    [server]
    PROTOCOL = http
    HTTP_PORT = 3000
    SSH_dOMAIN = gitea.local
    DOMAIN = gitea.local
    ROOT_URL = https://gitea.local/
    DISABLE_SSH = false
    LANDING_PAGE = home
    SSH_PORT = 22
    REDIRECT_OTHER_PORT = false

    [service]
    ENABLE_CAPTCHA = true
    ACTIVE_CODE_LIVE_MINUTES = 180
    RESET_PASSWD_CODE_LIVE_MINUTES = 180
    REGISTER_EMAIL_CONFIRM = false
    DISABLE_REGISTRATION = false
    REQUIRE_SIGNIN_VIEW = false
    ENABLE_NOTIFY_MAIL = false
    ENABLE_REVERSE_PROXY_AUTHENTICATION = false
    ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false

    [database]
    DB_TYPE = postgres
    HOST = postgres-gitea
    PORT = 5432
    NAME = gitea
    USER = root
    PASSWD = eagerLamprey
    SSL_MODE = disable

    [admin]
    DISABLE_REGULAR_ORG_CREATION = false

    [security]
    INSTALL_LOCK = true
    SECRET_KEY = "Z2l0ZWE="

    [ui]
    EXPLORE_PAGING_NUM = 20
    ISSUE_PAGING_NUM = 10
    FEED_MAX_COMMIT_NUM = 5

    [cache]
    ADAPTER = memory
    INTERVAL = 60
    HOST =

    [webhook]
    QUEUE_LENGTH = 1000
    DELIVER_TIMEOUT = 5
    SKIP_TLS_VERIFY = true
    PAGING_NUM = 10

    [log]
    MODE = console
    LEVEL = Trace

    [other]
    SHOW_FOOTER_BRANDING = false
    SHOW_FOOTER_VERSION = true
  ranger-hive-metastore-install.properties: |
    # Example:
    # POLICY_MGR_URL=http://policymanager.xasecure.net:6080
    #
    POLICY_MGR_URL=http://ranger-admin-svc.default.svc.cluster.local:6080

    #
    # This is the repository name created within policy manager
    #
    # Example:
    # REPOSITORY_NAME=hivedev
    #
    REPOSITORY_NAME=hivedev

    #
    # Hive installation directory
    #
    # Example:
    # COMPONENT_INSTALL_DIR_NAME=/var/local/apache-hive-2.1.0-bin
    #
    COMPONENT_INSTALL_DIR_NAME=/apache-hive-metastore-3.0.0-bin

    # AUDIT configuration with V3 properties

    # Enable audit logs to Solr
    #Example
    #XAAUDIT.SOLR.ENABLE=true
    #XAAUDIT.SOLR.URL=http://localhost:6083/solr/ranger_audits
    #XAAUDIT.SOLR.ZOOKEEPER=
    #XAAUDIT.SOLR.FILE_SPOOL_DIR=/var/log/hive/audit/solr/spool

    XAAUDIT.SOLR.ENABLE=false
    XAAUDIT.SOLR.URL=NONE
    XAAUDIT.SOLR.USER=NONE
    XAAUDIT.SOLR.PASSWORD=NONE
    XAAUDIT.SOLR.ZOOKEEPER=NONE
    XAAUDIT.SOLR.FILE_SPOOL_DIR=/var/log/hive/audit/solr/spool

    # Enable audit logs to ElasticSearch
    #Example
    #XAAUDIT.ELASTICSEARCH.ENABLE=true
    #XAAUDIT.ELASTICSEARCH.URL=localhost
    #XAAUDIT.ELASTICSEARCH.INDEX=audit

    XAAUDIT.ELASTICSEARCH.ENABLE=false
    XAAUDIT.ELASTICSEARCH.URL=NONE
    XAAUDIT.ELASTICSEARCH.USER=NONE
    XAAUDIT.ELASTICSEARCH.PASSWORD=NONE
    XAAUDIT.ELASTICSEARCH.INDEX=NONE
    XAAUDIT.ELASTICSEARCH.PORT=NONE
    XAAUDIT.ELASTICSEARCH.PROTOCOL=NONE

    # Enable audit logs to HDFS
    #Example
    #XAAUDIT.HDFS.ENABLE=true
    #XAAUDIT.HDFS.HDFS_DIR=hdfs://node-1.example.com:8020/ranger/audit
    #  If using Azure Blob Storage
    #XAAUDIT.HDFS.HDFS_DIR=wasb[s]://<containername>@<accountname>.blob.core.windows.net/<path>
    #XAAUDIT.HDFS.HDFS_DIR=wasb://ranger_audit_container@my-azure-account.blob.core.windows.net/ranger/audit
    #XAAUDIT.HDFS.FILE_SPOOL_DIR=/var/log/hive/audit/hdfs/spool

    XAAUDIT.HDFS.ENABLE=false
    XAAUDIT.HDFS.HDFS_DIR=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit
    XAAUDIT.HDFS.FILE_SPOOL_DIR=/var/log/hive/audit/hdfs/spool

    # Following additional propertis are needed When auditing to Azure Blob Storage via HDFS
    # Get these values from your /etc/hadoop/conf/core-site.xml
    #XAAUDIT.HDFS.HDFS_DIR=wasb[s]://<containername>@<accountname>.blob.core.windows.net/<path>
    XAAUDIT.HDFS.AZURE_ACCOUNTNAME=__REPLACE_AZURE_ACCOUNT_NAME
    XAAUDIT.HDFS.AZURE_ACCOUNTKEY=__REPLACE_AZURE_ACCOUNT_KEY
    XAAUDIT.HDFS.AZURE_SHELL_KEY_PROVIDER=__REPLACE_AZURE_SHELL_KEY_PROVIDER
    XAAUDIT.HDFS.AZURE_ACCOUNTKEY_PROVIDER=__REPLACE_AZURE_ACCOUNT_KEY_PROVIDER

    #Log4j Audit Provider
    XAAUDIT.LOG4J.ENABLE=false
    XAAUDIT.LOG4J.IS_ASYNC=false
    XAAUDIT.LOG4J.ASYNC.MAX.QUEUE.SIZE=10240
    XAAUDIT.LOG4J.ASYNC.MAX.FLUSH.INTERVAL.MS=30000
    XAAUDIT.LOG4J.DESTINATION.LOG4J=true
    XAAUDIT.LOG4J.DESTINATION.LOG4J.LOGGER=xaaudit

    # End of V3 properties


    #
    #  Audit to HDFS Configuration
    #
    # If XAAUDIT.HDFS.IS_ENABLED is set to true, please replace tokens
    # that start with __REPLACE__ with appropriate values
    #  XAAUDIT.HDFS.IS_ENABLED=true
    #  XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
    #  XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=__REPLACE__LOG_DIR/hive/audit/%app-type%
    #  XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=__REPLACE__LOG_DIR/hive/audit/archive/%app-type%
    #
    # Example:
    #  XAAUDIT.HDFS.IS_ENABLED=true
    #  XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://namenode.example.com:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
    #  XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=/var/log/hive/audit/%app-type%
    #  XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=/var/log/hive/audit/archive/%app-type%
    #
    XAAUDIT.HDFS.IS_ENABLED=false
    XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
    XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=__REPLACE__LOG_DIR/hive/audit/%app-type%
    XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=__REPLACE__LOG_DIR/hive/audit/archive/%app-type%

    XAAUDIT.HDFS.DESTINTATION_FILE=%hostname%-audit.log
    XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS=900
    XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS=86400
    XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS=60
    XAAUDIT.HDFS.LOCAL_BUFFER_FILE=%time:yyyyMMdd-HHmm.ss%.log
    XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS=60
    XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS=600
    XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT=10

    #Solr Audit Provider
    XAAUDIT.SOLR.IS_ENABLED=false
    XAAUDIT.SOLR.MAX_QUEUE_SIZE=1
    XAAUDIT.SOLR.MAX_FLUSH_INTERVAL_MS=1000
    XAAUDIT.SOLR.SOLR_URL=http://localhost:6083/solr/ranger_audits

    # End of V2 properties

    #
    # SSL Client Certificate Information
    #
    # Example:
    # SSL_KEYSTORE_FILE_PATH=/etc/hive/conf/ranger-plugin-keystore.jks
    # SSL_KEYSTORE_PASSWORD=none
    # SSL_TRUSTSTORE_FILE_PATH=/etc/hive/conf/ranger-plugin-truststore.jks
    # SSL_TRUSTSTORE_PASSWORD=none
    #
    # You do not need use SSL between agent and security admin tool, please leave these sample value as it is.
    #
    SSL_KEYSTORE_FILE_PATH=/etc/hive/conf/ranger-plugin-keystore.jks
    SSL_KEYSTORE_PASSWORD=myKeyFilePassword
    SSL_TRUSTSTORE_FILE_PATH=/etc/hive/conf/ranger-plugin-truststore.jks
    SSL_TRUSTSTORE_PASSWORD=changeit

    #
    # Should Hive GRANT/REVOKE update XA policies?
    #
    # Example:
    #     UPDATE_XAPOLICIES_ON_GRANT_REVOKE=true
    #     UPDATE_XAPOLICIES_ON_GRANT_REVOKE=false
    #
    UPDATE_XAPOLICIES_ON_GRANT_REVOKE=true

    #
    # Custom component user
    # CUSTOM_COMPONENT_USER=<custom-user>
    # keep blank if component user is default
    CUSTOM_USER=


    #
    # Custom component group
    # CUSTOM_COMPONENT_GROUP=<custom-group>
    # keep blank if component group is default
    CUSTOM_GROUP=hadoop

  ranger-presto-install.properties: |
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    #
    # Location of Policy Manager URL
    #
    # Example:
    # POLICY_MGR_URL=http://policymanager.xasecure.net:6080
    #
    POLICY_MGR_URL=http://ranger-admin-svc:6080

    #
    # This is the repository name created within policy manager
    #
    # Example:
    # REPOSITORY_NAME=prestodev
    #
    REPOSITORY_NAME=prestodev

    #
    # Name of the directory where the component's lib and conf directory exist.
    # This location should be relative to the parent of the directory containing
    # the plugin installation files.
    #
    COMPONENT_INSTALL_DIR_NAME=/presto-server-344

    # Enable audit logs to Solr
    #Example
    #XAAUDIT.SOLR.ENABLE=true
    #XAAUDIT.SOLR.URL=http://localhost:6083/solr/ranger_audits
    #XAAUDIT.SOLR.ZOOKEEPER=
    #XAAUDIT.SOLR.FILE_SPOOL_DIR=/var/log/presto/audit/solr/spool

    XAAUDIT.SOLR.ENABLE=false
    XAAUDIT.SOLR.URL=NONE
    XAAUDIT.SOLR.USER=NONE
    XAAUDIT.SOLR.PASSWORD=NONE
    XAAUDIT.SOLR.ZOOKEEPER=NONE
    XAAUDIT.SOLR.FILE_SPOOL_DIR=/var/log/presto/audit/solr/spool

    # Enable audit logs to ElasticSearch
    #Example
    #XAAUDIT.ELASTICSEARCH.ENABLE=true
    #XAAUDIT.ELASTICSEARCH.URL=localhost
    #XAAUDIT.ELASTICSEARCH.INDEX=audit

    XAAUDIT.ELASTICSEARCH.ENABLE=false
    XAAUDIT.ELASTICSEARCH.URL=NONE
    XAAUDIT.ELASTICSEARCH.USER=NONE
    XAAUDIT.ELASTICSEARCH.PASSWORD=NONE
    XAAUDIT.ELASTICSEARCH.INDEX=NONE
    XAAUDIT.ELASTICSEARCH.PORT=NONE
    XAAUDIT.ELASTICSEARCH.PROTOCOL=NONE

    # Enable audit logs to HDFS
    #Example
    #XAAUDIT.HDFS.ENABLE=true
    #XAAUDIT.HDFS.HDFS_DIR=hdfs://node-1.example.com:8020/ranger/audit
    #  If using Azure Blob Storage
    #XAAUDIT.HDFS.HDFS_DIR=wasb[s]://<containername>@<accountname>.blob.core.windows.net/<path>
    #XAAUDIT.HDFS.HDFS_DIR=wasb://ranger_audit_container@my-azure-account.blob.core.windows.net/ranger/audit
    #XAAUDIT.HDFS.FILE_SPOOL_DIR=/var/log/presto/audit/hdfs/spool

    XAAUDIT.HDFS.ENABLE=false
    XAAUDIT.HDFS.HDFS_DIR=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit
    XAAUDIT.HDFS.FILE_SPOOL_DIR=/var/log/presto/audit/hdfs/spool

    # Following additional propertis are needed When auditing to Azure Blob Storage via HDFS
    # Get these values from your /etc/hadoop/conf/core-site.xml
    #XAAUDIT.HDFS.HDFS_DIR=wasb[s]://<containername>@<accountname>.blob.core.windows.net/<path>
    XAAUDIT.HDFS.AZURE_ACCOUNTNAME=__REPLACE_AZURE_ACCOUNT_NAME
    XAAUDIT.HDFS.AZURE_ACCOUNTKEY=__REPLACE_AZURE_ACCOUNT_KEY
    XAAUDIT.HDFS.AZURE_SHELL_KEY_PROVIDER=__REPLACE_AZURE_SHELL_KEY_PROVIDER
    XAAUDIT.HDFS.AZURE_ACCOUNTKEY_PROVIDER=__REPLACE_AZURE_ACCOUNT_KEY_PROVIDER

    #Log4j Audit Provider
    XAAUDIT.LOG4J.ENABLE=false
    XAAUDIT.LOG4J.IS_ASYNC=false
    XAAUDIT.LOG4J.ASYNC.MAX.QUEUE.SIZE=10240
    XAAUDIT.LOG4J.ASYNC.MAX.FLUSH.INTERVAL.MS=30000
    XAAUDIT.LOG4J.DESTINATION.LOG4J=true
    XAAUDIT.LOG4J.DESTINATION.LOG4J.LOGGER=xaaudit

    # End of V3 properties


    #
    #  Audit to HDFS Configuration
    #
    # If XAAUDIT.HDFS.IS_ENABLED is set to true, please replace tokens
    # that start with __REPLACE__ with appropriate values
    #  XAAUDIT.HDFS.IS_ENABLED=true
    #  XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
    #  XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=__REPLACE__LOG_DIR/presto/audit
    #  XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=__REPLACE__LOG_DIR/presto/audit/archive
    #
    # Example:
    #  XAAUDIT.HDFS.IS_ENABLED=true
    #  XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://namenode.example.com:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
    #  XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=/var/log/presto/audit
    #  XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=/var/log/presto/audit/archive
    #
    XAAUDIT.HDFS.IS_ENABLED=false
    XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
    XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=__REPLACE__LOG_DIR/presto/audit
    XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=__REPLACE__LOG_DIR/presto/audit/archive

    XAAUDIT.HDFS.DESTINTATION_FILE=%hostname%-audit.log
    XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS=900
    XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS=86400
    XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS=60
    XAAUDIT.HDFS.LOCAL_BUFFER_FILE=%time:yyyyMMdd-HHmm.ss%.log
    XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS=60
    XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS=600
    XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT=10

    #Solr Audit Provider
    XAAUDIT.SOLR.IS_ENABLED=false
    XAAUDIT.SOLR.MAX_QUEUE_SIZE=1
    XAAUDIT.SOLR.MAX_FLUSH_INTERVAL_MS=1000
    XAAUDIT.SOLR.SOLR_URL=http://localhost:6083/solr/ranger_audits

    # End of V2 properties

    #
    # SSL Client Certificate Information
    #
    # Example:
    # SSL_KEYSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-keystore.jks
    # SSL_KEYSTORE_PASSWORD=none
    # SSL_TRUSTSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-truststore.jks
    # SSL_TRUSTSTORE_PASSWORD=none
    #
    # You do not need use SSL between agent and security admin tool, please leave these sample value as it is.
    #
    SSL_KEYSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-keystore.jks
    SSL_KEYSTORE_PASSWORD=myKeyFilePassword
    SSL_TRUSTSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-truststore.jks
    SSL_TRUSTSTORE_PASSWORD=changeit

    #
    # Custom component user
    # CUSTOM_COMPONENT_USER=<custom-user>
    # keep blank if component user is default
    CUSTOM_USER=


    #
    # Custom component group
    # CUSTOM_COMPONENT_GROUP=<custom-group>
    # keep blank if component group is default
    CUSTOM_GROUP=

    XAAUDIT.SUMMARY.ENABLE=false
  ranger-entrypoint.sh: |
    export JAVA_HOME=/usr/lib/jvm/zre-11-amd64
    cd /presto-server-344
    mv /presto-server-344/etc/ranger-2.1.0-presto-plugin.tar.gz .
    tar xvf ranger-2.1.0-presto-plugin.tar.gz
    cp etc/ranger-presto-install.properties ranger-2.1.0-presto-plugin/install.properties
    cd ranger-2.1.0-presto-plugin
    ./enable-presto-plugin.sh
    cd ..
    ../entrypoint.sh

